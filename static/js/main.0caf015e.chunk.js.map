{"version":3,"sources":["images/fox.jpg","serviceWorker.js","components/baloons/Baloons.js","components/book_of_congrats/CongratulationBook.js","components/App.js","index.js","images/fox2.jpg"],"names":["module","exports","Boolean","window","location","hostname","match","Baloons","className","CongratulationBook","src","fox2","alt","App","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iNAAAA,EAAOC,QAAU,IAA0B,iC,2ECYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,gBCSSC,EAxBC,WACf,OACC,yBAAKC,UAAU,qBACd,yBAAKA,UAAU,WACd,6BACC,yCAED,6BACC,oCAED,6BACC,oCAED,6BACC,oCAED,6BACC,uC,8BCYUC,EA3BY,WAC1B,OACC,yBAAKD,UAAU,QACd,yBAAKA,UAAU,QACd,yBAAKA,UAAU,UACd,yBAAKA,UAAU,SACf,yBAAKE,IAAKC,IAAMC,IAAI,WAErB,yBAAKJ,UAAU,WACd,wBAAIA,UAAU,UAAd,iEACA,wBAAIA,UAAU,iBAAd,wFACA,0IACA,8HACA,iNACA,sKACA,6NACA,gMACA,+LACA,yNACA,uBAAGA,UAAU,cAAb,iIACA,uBAAGA,UAAU,cAAb,8DCXUK,MATf,WACC,OACC,yBAAKL,UAAU,QACd,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,QCFHM,IAASC,OACR,kBAAC,IAAMC,WAAP,KACC,kBAAC,IAAD,KACC,kBAAC,EAAD,QAGFC,SAASC,eAAe,SJsHnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,kBKzI5B5B,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.0caf015e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fox.e1243a2e.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport \"./baloons.scss\";\n\nconst Baloons = () => {\n\treturn (\n\t\t<div className=\"baloons-container\">\n\t\t\t<div className=\"balloon\">\n\t\t\t\t<div>\n\t\t\t\t\t<span>☺</span>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<span>A</span>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<span>H</span>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<span>R</span>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<span>!</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Baloons;\n","import React from \"react\";\nimport \"./book.scss\";\nimport fox from \"../../images/fox.jpg\";\nimport fox2 from \"../../images/fox2.jpg\";\n\nconst CongratulationBook = () => {\n\treturn (\n\t\t<div className=\"book\">\n\t\t\t<div className=\"card\">\n\t\t\t\t<div className=\"imgBox\">\n\t\t\t\t\t<div className=\"bark\" />\n\t\t\t\t\t<img src={fox2} alt=\"drago\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"details\">\n\t\t\t\t\t<h4 className=\"color1\">Дорогая Аня</h4>\n\t\t\t\t\t<h4 className=\"color2 margin\">С днем рождения !!!</h4>\n\t\t\t\t\t<p>Пусть я не смогу быть </p>\n\t\t\t\t\t<p>с тобой в этот день,</p>\n\t\t\t\t\t<p>Но я постараюсь создать атмосферу</p>\n\t\t\t\t\t<p>праздника этой открыткой,</p>\n\t\t\t\t\t<p>Ты на столько замечательный человек</p>\n\t\t\t\t\t<p>Что все люди, находящиеся рядом</p>\n\t\t\t\t\t<p>с тобой становятся счастливее,</p>\n\t\t\t\t\t<p>И я желаю тебе быть самой счастливой</p>\n\t\t\t\t\t<p className=\"text-right\">С днем рождения, лисёнок!</p>\n\t\t\t\t\t<p className=\"text-right\">♥Антончик</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default CongratulationBook;\n","import React from \"react\";\nimport Baloons from \"./baloons/Baloons\";\n\nimport CongratulationBook from \"./book_of_congrats/CongratulationBook\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"page\">\n\t\t\t<Baloons />\n\t\t\t<CongratulationBook />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./stylesheets/global.scss\";\nimport App from \"./components/App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/fox2.f4464f1f.jpg\";"],"sourceRoot":""}